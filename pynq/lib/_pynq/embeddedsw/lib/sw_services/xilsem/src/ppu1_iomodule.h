/**
 * (c) 2013 Xilinx Inc.
 * XREGDB v0.91
 * XREGCHDR v0.15
 *
 * Generated on: 2019-02-26
 *
 * @file: ppu1_iomodule.h
 *
 *
 * This file contains confidential and proprietary information
 * of Xilinx, Inc. and is protected under U.S. and
 * international copyright and other intellectual property
 * laws.
 *
 * DISCLAIMER
 * This disclaimer is not a license and does not grant any
 * rights to the materials distributed herewith. Except as
 * otherwise provided in a valid license issued to you by
 * Xilinx, and to the maximum extent permitted by applicable
 * law: (1) THESE MATERIALS ARE MADE AVAILABLE "AS IS" AND
 * WITH ALL FAULTS, AND XILINX HEREBY DISCLAIMS ALL WARRANTIES
 * AND CONDITIONS, EXPRESS, IMPLIED, OR STATUTORY, INCLUDING
 * BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY, NON-
 * INFRINGEMENT, OR FITNESS FOR ANY PARTICULAR PURPOSE; and
 * (2) Xilinx shall not be liable (whether in contract or tort,
 * including negligence, or under any other theory of
 * liability) for any loss or damage of any kind or nature
 * related to, arising under or in connection with these
 * materials, including for any direct, or any indirect,
 * special, incidental, or consequential loss or damage
 * (including loss of data, profits, goodwill, or any type of
 * loss or damage suffered as a result of any action brought
 * by a third party) even if such damage or loss was
 * reasonably foreseeable or Xilinx had been advised of the
 * possibility of the same.
 *
 * CRITICAL APPLICATIONS
 * Xilinx products are not designed or intended to be fail-
 * safe, or for use in any application requiring fail-safe
 * performance, such as life-support or safety devices or
 * systems, Class III medical devices, nuclear facilities,
 * applications related to the deployment of airbags, or any
 * other applications that could lead to death, personal
 * injury, or severe property or environmental damage
 * (individually and collectively, "Critical
 * Applications"). Customer assumes the sole risk and
 * liability of any use of Xilinx products in Critical
 * Applications, subject only to applicable laws and
 * regulations governing limitations on product liability.
 *
 * THIS COPYRIGHT NOTICE AND DISCLAIMER MUST BE RETAINED AS
 * PART OF THIS FILE AT ALL TIMES.
 *
 * Naming Convention: <MODULE>_<REGISTER>[_<FIELD>[_<DESC>]]
 *     <MODULE>       Module name (e.g. can or usb)
 *     <REGISTER>     Register within the current module
 *     [_<FIELD>]     Bit field within a register
 *     [_<DESC>]      Type of bit field define:
 *         SHIFT:     Least significant bit for the field
 *         WIDTH:     Size of field in bites
 *         MASK:      A masking over a range of bits or a bit to
 *                    be used for setting or clearing
 *
 */

#ifndef _PPU1_IOMODULE_H_
#define _PPU1_IOMODULE_H_

#ifdef __cplusplus
extern "C" {
#endif

/**
 * PPU1_IOMODULE Base Address
 */
#define PPU1_IOMODULE_BASEADDR      0XF0280000

/**
 * Register: PPU1_IOMODULE_GPO1
 */
#define PPU1_IOMODULE_GPO1    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000010 )

#define PPU1_IOMODULE_GPO1_PIT3_PRESCALE_SRC_SHIFT   2
#define PPU1_IOMODULE_GPO1_PIT3_PRESCALE_SRC_WIDTH   1
#define PPU1_IOMODULE_GPO1_PIT3_PRESCALE_SRC_MASK    0X00000004

#define PPU1_IOMODULE_GPO1_PIT1_PRESCALE_SRC_SHIFT   1
#define PPU1_IOMODULE_GPO1_PIT1_PRESCALE_SRC_WIDTH   1
#define PPU1_IOMODULE_GPO1_PIT1_PRESCALE_SRC_MASK    0X00000002

/**
 * Register: PPU1_IOMODULE_IRQ_STATUS
 */
#define PPU1_IOMODULE_IRQ_STATUS    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000030 )

#define PPU1_IOMODULE_IRQ_STATUS_INTC_IRQ_SHIFT   16
#define PPU1_IOMODULE_IRQ_STATUS_INTC_IRQ_WIDTH   16
#define PPU1_IOMODULE_IRQ_STATUS_INTC_IRQ_MASK    0XFFFF0000

#define PPU1_IOMODULE_IRQ_STATUS_PIT4_SHIFT   6
#define PPU1_IOMODULE_IRQ_STATUS_PIT4_WIDTH   1
#define PPU1_IOMODULE_IRQ_STATUS_PIT4_MASK    0X00000040

#define PPU1_IOMODULE_IRQ_STATUS_PIT3_SHIFT   5
#define PPU1_IOMODULE_IRQ_STATUS_PIT3_WIDTH   1
#define PPU1_IOMODULE_IRQ_STATUS_PIT3_MASK    0X00000020

#define PPU1_IOMODULE_IRQ_STATUS_PIT2_SHIFT   4
#define PPU1_IOMODULE_IRQ_STATUS_PIT2_WIDTH   1
#define PPU1_IOMODULE_IRQ_STATUS_PIT2_MASK    0X00000010

#define PPU1_IOMODULE_IRQ_STATUS_PIT1_SHIFT   3
#define PPU1_IOMODULE_IRQ_STATUS_PIT1_WIDTH   1
#define PPU1_IOMODULE_IRQ_STATUS_PIT1_MASK    0X00000008

/**
 * Register: PPU1_IOMODULE_IRQ_PENDING
 */
#define PPU1_IOMODULE_IRQ_PENDING    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000034 )

#define PPU1_IOMODULE_IRQ_PENDING_INTC_IRQ_SHIFT   16
#define PPU1_IOMODULE_IRQ_PENDING_INTC_IRQ_WIDTH   16
#define PPU1_IOMODULE_IRQ_PENDING_INTC_IRQ_MASK    0XFFFF0000

#define PPU1_IOMODULE_IRQ_PENDING_PIT4_SHIFT   6
#define PPU1_IOMODULE_IRQ_PENDING_PIT4_WIDTH   1
#define PPU1_IOMODULE_IRQ_PENDING_PIT4_MASK    0X00000040

#define PPU1_IOMODULE_IRQ_PENDING_PIT3_SHIFT   5
#define PPU1_IOMODULE_IRQ_PENDING_PIT3_WIDTH   1
#define PPU1_IOMODULE_IRQ_PENDING_PIT3_MASK    0X00000020

#define PPU1_IOMODULE_IRQ_PENDING_PIT2_SHIFT   4
#define PPU1_IOMODULE_IRQ_PENDING_PIT2_WIDTH   1
#define PPU1_IOMODULE_IRQ_PENDING_PIT2_MASK    0X00000010

#define PPU1_IOMODULE_IRQ_PENDING_PIT1_SHIFT   3
#define PPU1_IOMODULE_IRQ_PENDING_PIT1_WIDTH   1
#define PPU1_IOMODULE_IRQ_PENDING_PIT1_MASK    0X00000008

/**
 * Register: PPU1_IOMODULE_IRQ_ENABLE
 */
#define PPU1_IOMODULE_IRQ_ENABLE    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000038 )

#define PPU1_IOMODULE_IRQ_ENABLE_INTC_IRQ_SHIFT   16
#define PPU1_IOMODULE_IRQ_ENABLE_INTC_IRQ_WIDTH   16
#define PPU1_IOMODULE_IRQ_ENABLE_INTC_IRQ_MASK    0XFFFF0000

#define PPU1_IOMODULE_IRQ_ENABLE_PIT4_SHIFT   6
#define PPU1_IOMODULE_IRQ_ENABLE_PIT4_WIDTH   1
#define PPU1_IOMODULE_IRQ_ENABLE_PIT4_MASK    0X00000040

#define PPU1_IOMODULE_IRQ_ENABLE_PIT3_SHIFT   5
#define PPU1_IOMODULE_IRQ_ENABLE_PIT3_WIDTH   1
#define PPU1_IOMODULE_IRQ_ENABLE_PIT3_MASK    0X00000020

#define PPU1_IOMODULE_IRQ_ENABLE_PIT2_SHIFT   4
#define PPU1_IOMODULE_IRQ_ENABLE_PIT2_WIDTH   1
#define PPU1_IOMODULE_IRQ_ENABLE_PIT2_MASK    0X00000010

#define PPU1_IOMODULE_IRQ_ENABLE_PIT1_SHIFT   3
#define PPU1_IOMODULE_IRQ_ENABLE_PIT1_WIDTH   1
#define PPU1_IOMODULE_IRQ_ENABLE_PIT1_MASK    0X00000008

/**
 * Register: PPU1_IOMODULE_IRQ_ACK
 */
#define PPU1_IOMODULE_IRQ_ACK    ( ( PPU1_IOMODULE_BASEADDR ) + 0X0000003C )

#define PPU1_IOMODULE_IRQ_ACK_IRQ_ACK_SHIFT   0
#define PPU1_IOMODULE_IRQ_ACK_IRQ_ACK_WIDTH   32
#define PPU1_IOMODULE_IRQ_ACK_IRQ_ACK_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT1_PRELOAD
 */
#define PPU1_IOMODULE_PIT1_PRELOAD    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000040 )

#define PPU1_IOMODULE_PIT1_PRELOAD_PIT_PERIOD_SHIFT   0
#define PPU1_IOMODULE_PIT1_PRELOAD_PIT_PERIOD_WIDTH   32
#define PPU1_IOMODULE_PIT1_PRELOAD_PIT_PERIOD_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT1_COUNTER
 */
#define PPU1_IOMODULE_PIT1_COUNTER    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000044 )

#define PPU1_IOMODULE_PIT1_COUNTER_PIT_CNT_VALUE_SHIFT   0
#define PPU1_IOMODULE_PIT1_COUNTER_PIT_CNT_VALUE_WIDTH   32
#define PPU1_IOMODULE_PIT1_COUNTER_PIT_CNT_VALUE_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT1_CONTROL
 */
#define PPU1_IOMODULE_PIT1_CONTROL    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000048 )

#define PPU1_IOMODULE_PIT1_CONTROL_PIT_WRAP_CTRL_SHIFT   1
#define PPU1_IOMODULE_PIT1_CONTROL_PIT_WRAP_CTRL_WIDTH   1
#define PPU1_IOMODULE_PIT1_CONTROL_PIT_WRAP_CTRL_MASK    0X00000002

#define PPU1_IOMODULE_PIT1_CONTROL_PIT_EN_SHIFT   0
#define PPU1_IOMODULE_PIT1_CONTROL_PIT_EN_WIDTH   1
#define PPU1_IOMODULE_PIT1_CONTROL_PIT_EN_MASK    0X00000001

/**
 * Register: PPU1_IOMODULE_PIT2_PRELOAD
 */
#define PPU1_IOMODULE_PIT2_PRELOAD    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000050 )

#define PPU1_IOMODULE_PIT2_PRELOAD_PIT_PERIOD_SHIFT   0
#define PPU1_IOMODULE_PIT2_PRELOAD_PIT_PERIOD_WIDTH   32
#define PPU1_IOMODULE_PIT2_PRELOAD_PIT_PERIOD_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT2_COUNTER
 */
#define PPU1_IOMODULE_PIT2_COUNTER    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000054 )

#define PPU1_IOMODULE_PIT2_COUNTER_PIT_CNT_VALUE_SHIFT   0
#define PPU1_IOMODULE_PIT2_COUNTER_PIT_CNT_VALUE_WIDTH   32
#define PPU1_IOMODULE_PIT2_COUNTER_PIT_CNT_VALUE_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT2_CONTROL
 */
#define PPU1_IOMODULE_PIT2_CONTROL    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000058 )

#define PPU1_IOMODULE_PIT2_CONTROL_PIT_WRAP_CTRL_SHIFT   1
#define PPU1_IOMODULE_PIT2_CONTROL_PIT_WRAP_CTRL_WIDTH   1
#define PPU1_IOMODULE_PIT2_CONTROL_PIT_WRAP_CTRL_MASK    0X00000002

#define PPU1_IOMODULE_PIT2_CONTROL_PIT_EN_SHIFT   0
#define PPU1_IOMODULE_PIT2_CONTROL_PIT_EN_WIDTH   1
#define PPU1_IOMODULE_PIT2_CONTROL_PIT_EN_MASK    0X00000001

/**
 * Register: PPU1_IOMODULE_PIT3_PRELOAD
 */
#define PPU1_IOMODULE_PIT3_PRELOAD    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000060 )

#define PPU1_IOMODULE_PIT3_PRELOAD_PIT_PERIOD_SHIFT   0
#define PPU1_IOMODULE_PIT3_PRELOAD_PIT_PERIOD_WIDTH   32
#define PPU1_IOMODULE_PIT3_PRELOAD_PIT_PERIOD_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT3_COUNTER
 */
#define PPU1_IOMODULE_PIT3_COUNTER    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000064 )

#define PPU1_IOMODULE_PIT3_COUNTER_PIT_CNT_VALUE_SHIFT   0
#define PPU1_IOMODULE_PIT3_COUNTER_PIT_CNT_VALUE_WIDTH   32
#define PPU1_IOMODULE_PIT3_COUNTER_PIT_CNT_VALUE_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT3_CONTROL
 */
#define PPU1_IOMODULE_PIT3_CONTROL    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000068 )

#define PPU1_IOMODULE_PIT3_CONTROL_PIT_WRAP_CTRL_SHIFT   1
#define PPU1_IOMODULE_PIT3_CONTROL_PIT_WRAP_CTRL_WIDTH   1
#define PPU1_IOMODULE_PIT3_CONTROL_PIT_WRAP_CTRL_MASK    0X00000002

#define PPU1_IOMODULE_PIT3_CONTROL_PIT_EN_SHIFT   0
#define PPU1_IOMODULE_PIT3_CONTROL_PIT_EN_WIDTH   1
#define PPU1_IOMODULE_PIT3_CONTROL_PIT_EN_MASK    0X00000001

/**
 * Register: PPU1_IOMODULE_PIT4_PRELOAD
 */
#define PPU1_IOMODULE_PIT4_PRELOAD    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000070 )

#define PPU1_IOMODULE_PIT4_PRELOAD_PIT_PERIOD_SHIFT   0
#define PPU1_IOMODULE_PIT4_PRELOAD_PIT_PERIOD_WIDTH   32
#define PPU1_IOMODULE_PIT4_PRELOAD_PIT_PERIOD_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT4_COUNTER
 */
#define PPU1_IOMODULE_PIT4_COUNTER    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000074 )

#define PPU1_IOMODULE_PIT4_COUNTER_PIT_CNT_VALUE_SHIFT   0
#define PPU1_IOMODULE_PIT4_COUNTER_PIT_CNT_VALUE_WIDTH   32
#define PPU1_IOMODULE_PIT4_COUNTER_PIT_CNT_VALUE_MASK    0XFFFFFFFF

/**
 * Register: PPU1_IOMODULE_PIT4_CONTROL
 */
#define PPU1_IOMODULE_PIT4_CONTROL    ( ( PPU1_IOMODULE_BASEADDR ) + 0X00000078 )

#define PPU1_IOMODULE_PIT4_CONTROL_PIT_WRAP_CTRL_SHIFT   1
#define PPU1_IOMODULE_PIT4_CONTROL_PIT_WRAP_CTRL_WIDTH   1
#define PPU1_IOMODULE_PIT4_CONTROL_PIT_WRAP_CTRL_MASK    0X00000002

#define PPU1_IOMODULE_PIT4_CONTROL_PIT_EN_SHIFT   0
#define PPU1_IOMODULE_PIT4_CONTROL_PIT_EN_WIDTH   1
#define PPU1_IOMODULE_PIT4_CONTROL_PIT_EN_MASK    0X00000001

#ifdef __cplusplus
}
#endif


#endif /* _PPU1_IOMODULE_H_ */
